////////////////////////////////////////////////////////////////////////////////

#include "scoder.h"

////////////////////////////////////////////////////////////////////////////////

#include "bmpcontainer.h"

////////////////////////////////////////////////////////////////////////////////

#include "lsbcoder.h"
#include "pricoder.h"
#include "prscoder.h"
#include "blockcoder.h"
#include "quantcoder.h"
#include "crosscoder.h"

////////////////////////////////////////////////////////////////////////////////

#include "prikey.h"
#include "prskey.h"
#include "blockkey.h"
#include "quantkey.h"

////////////////////////////////////////////////////////////////////////////////


Container* GetBMPContainer( const std::string& _fileName )
{
    return new BMPContainer(_fileName);
}


////////////////////////////////////////////////////////////////////////////////


Coder* GetLSBCoder()
{
    return new LSBCoder();
}


////////////////////////////////////////////////////////////////////////////////


Coder* GetPRICoder()
{
    return new PRICoder();
}


////////////////////////////////////////////////////////////////////////////////


Coder* GetPRSCoder()
{
    return new PRSCoder();
}


////////////////////////////////////////////////////////////////////////////////


Coder* GetBlockCoder()
{
    return new BlockCoder();
}


////////////////////////////////////////////////////////////////////////////////


Coder* GetQuantCoder()
{
    return new QuantCoder();
}


////////////////////////////////////////////////////////////////////////////////


Coder* GetCrossCoder()
{
    return new CrossCoder();
}


////////////////////////////////////////////////////////////////////////////////


Key* GetPRIKey( const std::string& _string, Key::KeyType _type )
{
    return new PRIKey(_string, _type);
}


////////////////////////////////////////////////////////////////////////////////


Key* GetPRSKey( const std::string& _string, Key::KeyType _type )
{
    return new PRSKey(_string, _type);
}


////////////////////////////////////////////////////////////////////////////////


Key* GetBlockKey( const std::string& _string, Key::KeyType _type )
{
    return new BlockKey(_string, _type);
}


////////////////////////////////////////////////////////////////////////////////


Key* GetQuantKey( const std::string& _string, Key::KeyType _type )
{
    return new QuantKey(_string, _type);
}


////////////////////////////////////////////////////////////////////////////////
