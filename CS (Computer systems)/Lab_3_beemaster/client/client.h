#ifndef CLIENT_H
#define CLIENT_H

////////////////////////////////////////////////////////////////////////////////

#include <QTcpSocket>

////////////////////////////////////////////////////////////////////////////////

class Client : public QObject
{
////////////////////////////////////////////////////////////////////////////////

    Q_OBJECT

////////////////////////////////////////////////////////////////////////////////

public:

////////////////////////////////////////////////////////////////////////////////


    /** Constructor */
    Client(QObject* _parent = NULL);


    /** Destructor */
    virtual ~Client();


////////////////////////////////////////////////////////////////////////////////

private slots:

////////////////////////////////////////////////////////////////////////////////


    /** Receives, processes and sends image */
    void ProcessImage();


////////////////////////////////////////////////////////////////////////////////

private:

////////////////////////////////////////////////////////////////////////////////


    /** Reads image in one colour */
    void ReadImage();


    /** Maps mask on image */
    void MaskImage();


    /** Writes masked image */
    void WriteImage();


////////////////////////////////////////////////////////////////////////////////


    /** Server socket */
    QTcpSocket* m_TcpSocket;


    /** Image height */
    int m_ImageHeight;


    /** Image width */
    int m_ImageWidth;


    /** Image in one colour */
    QVector<int> m_Image;


    /** Mask mapped on image */
    QVector<int> m_Mask;


////////////////////////////////////////////////////////////////////////////////
};


#endif // CLIENT_H
