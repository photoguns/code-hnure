#include "state.h"
#include <iostream>

////////////////////////////////////////////////////////////////////////////////

int State::m_Timer;
std::vector<State*> State::m_States;

////////////////////////////////////////////////////////////////////////////////

void State::SetStates( std::vector<State*>& _states )
{
	m_States = _states;
}

////////////////////////////////////////////////////////////////////////////////

void State::DestroyStates()
{
	for (size_t i = 0; i < m_States.size(); ++i)
		delete m_States[i];
}

////////////////////////////////////////////////////////////////////////////////

State* State::GetOffState()
{
	return m_States[0];
}

////////////////////////////////////////////////////////////////////////////////

State* State::GetOnState()
{
	return m_States[1];
}

////////////////////////////////////////////////////////////////////////////////

State* State::GetPauseState()
{
	return m_States[2];
}

////////////////////////////////////////////////////////////////////////////////

void State::PrintStateInfo() const
{
    const char* state = NULL;
    if ( IsOffState() )
        state = "off";
    else if ( IsOnState() )
        state = "on";
    else if ( IsPauseState() )
        state = "pause";

    std::cout << "Microwave is in " << state <<" state\n"
        <<"timer is set to " << m_Timer <<" minutes\n"
        <<"door is " << (IsPauseState() ? "open" : "closed") << std::endl;
}

////////////////////////////////////////////////////////////////////////////////
